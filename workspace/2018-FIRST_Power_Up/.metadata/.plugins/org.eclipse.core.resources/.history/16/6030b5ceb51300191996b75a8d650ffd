/*----------------------------------------------------------------------------*/
/* Copyright (c) 2017-2018 FIRST. All Rights Reserved.                        */
/* Open Source Software - may be modified and shared by FRC teams. The code   */
/* must be accompanied by the FIRST BSD license file in the root directory of */
/* the project.                                                               */
/*----------------------------------------------------------------------------*/

package org.usfirst.frc.team4681.robot;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.Victor;

/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the IterativeRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the build.properties file in the
 * project.
 */
public class Robot extends TimedRobot {
	Victor motor0;
	Victor motor1;
	Joystick controller;
	boolean analogInput;
	double stepCounter;


	@Override
	public void robotInit() {
		this.motor0 = new Victor(0);
		this.motor1 = new Victor(1);
		this.controller = new Joystick(0);
		analogInput = true;
		stepCounter = 0;
	}


	@Override
	public void autonomousInit() {}

	@Override
	public void autonomousPeriodic() {}

	/**
	 * This function is called periodically during operator control.
	 */
	@Override
	public void teleopPeriodic() {
		/**
		 if (controller.getRawButton(6)) {
		 
			stepCounter += .01;
			if (stepCounter > 1) stepCounter = 1;
		} else {
			stepCounter -= .01;
			if (stepCounter < 0) stepCounter = 0;
		}
		
		motor0.set(stepCounter);
		System.out.println(stepCounter);
		**/
		motor0.set(.25*controller.getRawAxis(3));
		motor1.set(-.25*controller.getRawAxis(1));
		
		/**
		if (controller.getRawButtonPressed(12))
			analogInput = !analogInput;
		System.out.print(analogInput);
		if (analogInput) {
			motor0.set(controller.getRawAxis(3)); //R Handle, y-axis
		} 
		else {
			if(controller.getRawButtonPressed(5))
				motor0.set(1-motor0.get());
		}
		**/
	}

	@Override
	public void testPeriodic() {}
}
